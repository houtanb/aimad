!
! Copyright (C) 2006-2014 Houtan Bastani and Luca Guerrieri
!
!
! This free software: you can redistribute it and/or modify
! it under the terms of the GNU General Public License as published by
! the Free Software Foundation, either version 3 of the License, or
! (at your option) any later version.
!
! It is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
! GNU General Public License for more details.
!
! You should have received a copy of the GNU General Public License
! along with Dynare.  If not, see <http://www.gnu.org/licenses/>.
!

C        Generated by TAPENADE     (INRIA, Tropics team)
C  Tapenade - Version 2.2 (r1239) - Wed 28 Jun 2006 04:59:55 PM CEST
C
C  Differentiation of dlarfx in forward (tangent) mode: (multi-directional mode)
C   variations  of output variables: work c
C   with respect to input variables: tau v work c
      SUBROUTINE DLARFX_DV(side, m, n, v, vd, tau, taud, c, cd, ldc,
     +                     work, workd, nbdirs)
      USE DIFFSIZES
      IMPLICIT NONE
      INTEGER ldc, nbdirs
      DOUBLE PRECISION c(ldc, *), cd(nbdirsmax, ldc, *), v(*), vd(
     +                 nbdirsmax, *), work(*), workd(nbdirsmax, *)
      INTEGER m, n
      CHARACTER side
      DOUBLE PRECISION tau, taud(nbdirsmax)
      DOUBLE PRECISION one, zero
      PARAMETER (one=1.0d+0, zero=0.0d+0)
      DOUBLE PRECISION arg1, arg1d(nbdirsmax)
      DOUBLE PRECISION initvald(nbdirsmax), initvald0(nbdirsmax)
      INTEGER j, nd
      LOGICAL LSAME, result1
      DOUBLE PRECISION sum, sumd(nbdirsmax), t1, t10, t10d(nbdirsmax),
     +                 t1d(nbdirsmax), t2, t2d(nbdirsmax), t3, t3d(
     +                 nbdirsmax), t4, t4d(nbdirsmax), t5, t5d(nbdirsmax
     +                 ), t6, t6d(nbdirsmax), t7, t7d(nbdirsmax), t8,
     +                 t8d(nbdirsmax), t9, t9d(nbdirsmax), v1, v10, v10d
     +                 (nbdirsmax), v1d(nbdirsmax), v2, v2d(nbdirsmax),
     +                 v3, v3d(nbdirsmax), v4, v4d(nbdirsmax), v5, v5d(
     +                 nbdirsmax), v6, v6d(nbdirsmax), v7, v7d(nbdirsmax
     +                 ), v8, v8d(nbdirsmax), v9, v9d(nbdirsmax)
      EXTERNAL LSAME
C
C  -- LAPACK auxiliary routine (version 3.1) --
C     Univ. of Tennessee, Univ. of California Berkeley and NAG Ltd..
C     November 2006
C
C     .. Scalar Arguments ..
C     ..
C     .. Array Arguments ..
C     ..
C
C  Purpose
C  =======
C
C  DLARFX applies a real elementary reflector H to a real m by n
C  matrix C, from either the left or the right. H is represented in the
C  form
C
C        H = I - tau * v * v'
C
C  where tau is a real scalar and v is a real vector.
C
C  If tau = 0, then H is taken to be the unit matrix
C
C  This version uses inline code if H has order < 11.
C
C  Arguments
C  =========
C
C  SIDE    (input) CHARACTER*1
C          = 'L': form  H * C
C          = 'R': form  C * H
C
C  M       (input) INTEGER
C          The number of rows of the matrix C.
C
C  N       (input) INTEGER
C          The number of columns of the matrix C.
C
C  V       (input) DOUBLE PRECISION array, dimension (M) if SIDE = 'L'
C                                     or (N) if SIDE = 'R'
C          The vector v in the representation of H.
C
C  TAU     (input) DOUBLE PRECISION
C          The value tau in the representation of H.
C
C  C       (input/output) DOUBLE PRECISION array, dimension (LDC,N)
C          On entry, the m by n matrix C.
C          On exit, C is overwritten by the matrix H * C if SIDE = 'L',
C          or C * H if SIDE = 'R'.
C
C  LDC     (input) INTEGER
C          The leading dimension of the array C. LDA >= (1,M).
C
C  WORK    (workspace) DOUBLE PRECISION array, dimension
C                      (N) if SIDE = 'L'
C                      or (M) if SIDE = 'R'
C          WORK is not referenced if H has order < 11.
C
C  =====================================================================
C
C     .. Parameters ..
C     ..
C     .. Local Scalars ..
C     ..
C     .. External Functions ..
C     ..
C     .. External Subroutines ..
C     ..
C     .. Executable Statements ..
C
      IF (tau .EQ. zero) THEN
        RETURN
      ELSE
        result1 = LSAME(side, 'L')
        IF (result1) THEN
C
C        Form  H * C, where H has order m.
C
C
C
C
          IF (m .EQ. 1) THEN
            DO nd=1,nbdirs
              t1d(nd) = -((taud(nd)*v(1)+tau*vd(nd, 1))*v(1)) - tau*v(1)
     +          *vd(nd, 1)
            ENDDO
C
C        Special code for 1 x 1 Householder
C
            t1 = one - tau*v(1)*v(1)
            DO j=1,n
              DO nd=1,nbdirs
                cd(nd, 1, j) = t1d(nd)*c(1, j) + t1*cd(nd, 1, j)
              ENDDO
              c(1, j) = t1*c(1, j)
            ENDDO
          ELSE IF (m .EQ. 2) THEN
C
C        Special code for 2 x 2 Householder
C
            v1 = v(1)
            t1 = tau*v1
            v2 = v(2)
            DO nd=1,nbdirs
              v2d(nd) = vd(nd, 2)
              v1d(nd) = vd(nd, 1)
              t2d(nd) = taud(nd)*v2 + tau*v2d(nd)
              t1d(nd) = taud(nd)*v1 + tau*v1d(nd)
            ENDDO
            t2 = tau*v2
            DO j=1,n
              sum = v1*c(1, j) + v2*c(2, j)
              DO nd=1,nbdirs
                sumd(nd) = v1d(nd)*c(1, j) + v1*cd(nd, 1, j) + v2d(nd)*c
     +            (2, j) + v2*cd(nd, 2, j)
                cd(nd, 1, j) = cd(nd, 1, j) - sumd(nd)*t1 - sum*t1d(nd)
                cd(nd, 2, j) = cd(nd, 2, j) - sumd(nd)*t2 - sum*t2d(nd)
              ENDDO
              c(1, j) = c(1, j) - sum*t1
              c(2, j) = c(2, j) - sum*t2
            ENDDO
          ELSE IF (m .EQ. 3) THEN
C
C        Special code for 3 x 3 Householder
C
            v1 = v(1)
            t1 = tau*v1
            v2 = v(2)
            v3 = v(3)
            DO nd=1,nbdirs
              v2d(nd) = vd(nd, 2)
              v3d(nd) = vd(nd, 3)
              v1d(nd) = vd(nd, 1)
              t3d(nd) = taud(nd)*v3 + tau*v3d(nd)
              t2d(nd) = taud(nd)*v2 + tau*v2d(nd)
              t1d(nd) = taud(nd)*v1 + tau*v1d(nd)
            ENDDO
            t2 = tau*v2
            t3 = tau*v3
            DO j=1,n
              sum = v1*c(1, j) + v2*c(2, j) + v3*c(3, j)
              DO nd=1,nbdirs
                sumd(nd) = v1d(nd)*c(1, j) + v1*cd(nd, 1, j) + v2d(nd)*c
     +            (2, j) + v2*cd(nd, 2, j) + v3d(nd)*c(3, j) + v3*cd(nd
     +            , 3, j)
                cd(nd, 1, j) = cd(nd, 1, j) - sumd(nd)*t1 - sum*t1d(nd)
                cd(nd, 2, j) = cd(nd, 2, j) - sumd(nd)*t2 - sum*t2d(nd)
                cd(nd, 3, j) = cd(nd, 3, j) - sumd(nd)*t3 - sum*t3d(nd)
              ENDDO
              c(1, j) = c(1, j) - sum*t1
              c(2, j) = c(2, j) - sum*t2
              c(3, j) = c(3, j) - sum*t3
            ENDDO
          ELSE IF (m .EQ. 4) THEN
C
C        Special code for 4 x 4 Householder
C
            v1 = v(1)
            t1 = tau*v1
            v2 = v(2)
            v3 = v(3)
            v4 = v(4)
            DO nd=1,nbdirs
              v2d(nd) = vd(nd, 2)
              v4d(nd) = vd(nd, 4)
              v3d(nd) = vd(nd, 3)
              v1d(nd) = vd(nd, 1)
              t4d(nd) = taud(nd)*v4 + tau*v4d(nd)
              t3d(nd) = taud(nd)*v3 + tau*v3d(nd)
              t2d(nd) = taud(nd)*v2 + tau*v2d(nd)
              t1d(nd) = taud(nd)*v1 + tau*v1d(nd)
            ENDDO
            t2 = tau*v2
            t3 = tau*v3
            t4 = tau*v4
            DO j=1,n
              sum = v1*c(1, j) + v2*c(2, j) + v3*c(3, j) + v4*c(4, j)
              DO nd=1,nbdirs
                sumd(nd) = v1d(nd)*c(1, j) + v1*cd(nd, 1, j) + v2d(nd)*c
     +            (2, j) + v2*cd(nd, 2, j) + v3d(nd)*c(3, j) + v3*cd(nd
     +            , 3, j) + v4d(nd)*c(4, j) + v4*cd(nd, 4, j)
                cd(nd, 1, j) = cd(nd, 1, j) - sumd(nd)*t1 - sum*t1d(nd)
                cd(nd, 2, j) = cd(nd, 2, j) - sumd(nd)*t2 - sum*t2d(nd)
                cd(nd, 3, j) = cd(nd, 3, j) - sumd(nd)*t3 - sum*t3d(nd)
                cd(nd, 4, j) = cd(nd, 4, j) - sumd(nd)*t4 - sum*t4d(nd)
              ENDDO
              c(1, j) = c(1, j) - sum*t1
              c(2, j) = c(2, j) - sum*t2
              c(3, j) = c(3, j) - sum*t3
              c(4, j) = c(4, j) - sum*t4
            ENDDO
          ELSE IF (m .EQ. 5) THEN
C
C        Special code for 5 x 5 Householder
C
            v1 = v(1)
            t1 = tau*v1
            v2 = v(2)
            v3 = v(3)
            v4 = v(4)
            v5 = v(5)
            DO nd=1,nbdirs
              v2d(nd) = vd(nd, 2)
              v5d(nd) = vd(nd, 5)
              v4d(nd) = vd(nd, 4)
              v3d(nd) = vd(nd, 3)
              v1d(nd) = vd(nd, 1)
              t5d(nd) = taud(nd)*v5 + tau*v5d(nd)
              t4d(nd) = taud(nd)*v4 + tau*v4d(nd)
              t3d(nd) = taud(nd)*v3 + tau*v3d(nd)
              t2d(nd) = taud(nd)*v2 + tau*v2d(nd)
              t1d(nd) = taud(nd)*v1 + tau*v1d(nd)
            ENDDO
            t2 = tau*v2
            t3 = tau*v3
            t4 = tau*v4
            t5 = tau*v5
            DO j=1,n
              sum = v1*c(1, j) + v2*c(2, j) + v3*c(3, j) + v4*c(4, j) +
     +          v5*c(5, j)
              DO nd=1,nbdirs
                sumd(nd) = v1d(nd)*c(1, j) + v1*cd(nd, 1, j) + v2d(nd)*c
     +            (2, j) + v2*cd(nd, 2, j) + v3d(nd)*c(3, j) + v3*cd(nd
     +            , 3, j) + v4d(nd)*c(4, j) + v4*cd(nd, 4, j) + v5d(nd)*
     +            c(5, j) + v5*cd(nd, 5, j)
                cd(nd, 1, j) = cd(nd, 1, j) - sumd(nd)*t1 - sum*t1d(nd)
                cd(nd, 2, j) = cd(nd, 2, j) - sumd(nd)*t2 - sum*t2d(nd)
                cd(nd, 3, j) = cd(nd, 3, j) - sumd(nd)*t3 - sum*t3d(nd)
                cd(nd, 4, j) = cd(nd, 4, j) - sumd(nd)*t4 - sum*t4d(nd)
                cd(nd, 5, j) = cd(nd, 5, j) - sumd(nd)*t5 - sum*t5d(nd)
              ENDDO
              c(1, j) = c(1, j) - sum*t1
              c(2, j) = c(2, j) - sum*t2
              c(3, j) = c(3, j) - sum*t3
              c(4, j) = c(4, j) - sum*t4
              c(5, j) = c(5, j) - sum*t5
            ENDDO
          ELSE IF (m .EQ. 6) THEN
C
C        Special code for 6 x 6 Householder
C
            v1 = v(1)
            t1 = tau*v1
            v2 = v(2)
            v3 = v(3)
            v4 = v(4)
            v5 = v(5)
            v6 = v(6)
            DO nd=1,nbdirs
              v2d(nd) = vd(nd, 2)
              v6d(nd) = vd(nd, 6)
              v5d(nd) = vd(nd, 5)
              v4d(nd) = vd(nd, 4)
              v3d(nd) = vd(nd, 3)
              v1d(nd) = vd(nd, 1)
              t6d(nd) = taud(nd)*v6 + tau*v6d(nd)
              t5d(nd) = taud(nd)*v5 + tau*v5d(nd)
              t4d(nd) = taud(nd)*v4 + tau*v4d(nd)
              t3d(nd) = taud(nd)*v3 + tau*v3d(nd)
              t2d(nd) = taud(nd)*v2 + tau*v2d(nd)
              t1d(nd) = taud(nd)*v1 + tau*v1d(nd)
            ENDDO
            t2 = tau*v2
            t3 = tau*v3
            t4 = tau*v4
            t5 = tau*v5
            t6 = tau*v6
            DO j=1,n
              sum = v1*c(1, j) + v2*c(2, j) + v3*c(3, j) + v4*c(4, j) +
     +          v5*c(5, j) + v6*c(6, j)
              DO nd=1,nbdirs
                sumd(nd) = v1d(nd)*c(1, j) + v1*cd(nd, 1, j) + v2d(nd)*c
     +            (2, j) + v2*cd(nd, 2, j) + v3d(nd)*c(3, j) + v3*cd(nd
     +            , 3, j) + v4d(nd)*c(4, j) + v4*cd(nd, 4, j) + v5d(nd)*
     +            c(5, j) + v5*cd(nd, 5, j) + v6d(nd)*c(6, j) + v6*cd(nd
     +            , 6, j)
                cd(nd, 1, j) = cd(nd, 1, j) - sumd(nd)*t1 - sum*t1d(nd)
                cd(nd, 2, j) = cd(nd, 2, j) - sumd(nd)*t2 - sum*t2d(nd)
                cd(nd, 3, j) = cd(nd, 3, j) - sumd(nd)*t3 - sum*t3d(nd)
                cd(nd, 4, j) = cd(nd, 4, j) - sumd(nd)*t4 - sum*t4d(nd)
                cd(nd, 5, j) = cd(nd, 5, j) - sumd(nd)*t5 - sum*t5d(nd)
                cd(nd, 6, j) = cd(nd, 6, j) - sumd(nd)*t6 - sum*t6d(nd)
              ENDDO
              c(1, j) = c(1, j) - sum*t1
              c(2, j) = c(2, j) - sum*t2
              c(3, j) = c(3, j) - sum*t3
              c(4, j) = c(4, j) - sum*t4
              c(5, j) = c(5, j) - sum*t5
              c(6, j) = c(6, j) - sum*t6
            ENDDO
          ELSE IF (m .EQ. 7) THEN
C
C        Special code for 7 x 7 Householder
C
            v1 = v(1)
            t1 = tau*v1
            v2 = v(2)
            v3 = v(3)
            v4 = v(4)
            v5 = v(5)
            v6 = v(6)
            v7 = v(7)
            DO nd=1,nbdirs
              v2d(nd) = vd(nd, 2)
              v7d(nd) = vd(nd, 7)
              v6d(nd) = vd(nd, 6)
              v5d(nd) = vd(nd, 5)
              v4d(nd) = vd(nd, 4)
              v3d(nd) = vd(nd, 3)
              v1d(nd) = vd(nd, 1)
              t7d(nd) = taud(nd)*v7 + tau*v7d(nd)
              t6d(nd) = taud(nd)*v6 + tau*v6d(nd)
              t5d(nd) = taud(nd)*v5 + tau*v5d(nd)
              t4d(nd) = taud(nd)*v4 + tau*v4d(nd)
              t3d(nd) = taud(nd)*v3 + tau*v3d(nd)
              t2d(nd) = taud(nd)*v2 + tau*v2d(nd)
              t1d(nd) = taud(nd)*v1 + tau*v1d(nd)
            ENDDO
            t2 = tau*v2
            t3 = tau*v3
            t4 = tau*v4
            t5 = tau*v5
            t6 = tau*v6
            t7 = tau*v7
            DO j=1,n
              sum = v1*c(1, j) + v2*c(2, j) + v3*c(3, j) + v4*c(4, j) +
     +          v5*c(5, j) + v6*c(6, j) + v7*c(7, j)
              DO nd=1,nbdirs
                sumd(nd) = v1d(nd)*c(1, j) + v1*cd(nd, 1, j) + v2d(nd)*c
     +            (2, j) + v2*cd(nd, 2, j) + v3d(nd)*c(3, j) + v3*cd(nd
     +            , 3, j) + v4d(nd)*c(4, j) + v4*cd(nd, 4, j) + v5d(nd)*
     +            c(5, j) + v5*cd(nd, 5, j) + v6d(nd)*c(6, j) + v6*cd(nd
     +            , 6, j) + v7d(nd)*c(7, j) + v7*cd(nd, 7, j)
                cd(nd, 1, j) = cd(nd, 1, j) - sumd(nd)*t1 - sum*t1d(nd)
                cd(nd, 2, j) = cd(nd, 2, j) - sumd(nd)*t2 - sum*t2d(nd)
                cd(nd, 3, j) = cd(nd, 3, j) - sumd(nd)*t3 - sum*t3d(nd)
                cd(nd, 4, j) = cd(nd, 4, j) - sumd(nd)*t4 - sum*t4d(nd)
                cd(nd, 5, j) = cd(nd, 5, j) - sumd(nd)*t5 - sum*t5d(nd)
                cd(nd, 6, j) = cd(nd, 6, j) - sumd(nd)*t6 - sum*t6d(nd)
                cd(nd, 7, j) = cd(nd, 7, j) - sumd(nd)*t7 - sum*t7d(nd)
              ENDDO
              c(1, j) = c(1, j) - sum*t1
              c(2, j) = c(2, j) - sum*t2
              c(3, j) = c(3, j) - sum*t3
              c(4, j) = c(4, j) - sum*t4
              c(5, j) = c(5, j) - sum*t5
              c(6, j) = c(6, j) - sum*t6
              c(7, j) = c(7, j) - sum*t7
            ENDDO
          ELSE IF (m .EQ. 8) THEN
C
C        Special code for 8 x 8 Householder
C
            v1 = v(1)
            t1 = tau*v1
            v2 = v(2)
            v3 = v(3)
            v4 = v(4)
            v5 = v(5)
            v6 = v(6)
            v7 = v(7)
            v8 = v(8)
            DO nd=1,nbdirs
              v2d(nd) = vd(nd, 2)
              v8d(nd) = vd(nd, 8)
              v7d(nd) = vd(nd, 7)
              v6d(nd) = vd(nd, 6)
              v5d(nd) = vd(nd, 5)
              v4d(nd) = vd(nd, 4)
              v3d(nd) = vd(nd, 3)
              v1d(nd) = vd(nd, 1)
              t8d(nd) = taud(nd)*v8 + tau*v8d(nd)
              t7d(nd) = taud(nd)*v7 + tau*v7d(nd)
              t6d(nd) = taud(nd)*v6 + tau*v6d(nd)
              t5d(nd) = taud(nd)*v5 + tau*v5d(nd)
              t4d(nd) = taud(nd)*v4 + tau*v4d(nd)
              t3d(nd) = taud(nd)*v3 + tau*v3d(nd)
              t2d(nd) = taud(nd)*v2 + tau*v2d(nd)
              t1d(nd) = taud(nd)*v1 + tau*v1d(nd)
            ENDDO
            t2 = tau*v2
            t3 = tau*v3
            t4 = tau*v4
            t5 = tau*v5
            t6 = tau*v6
            t7 = tau*v7
            t8 = tau*v8
            DO j=1,n
              sum = v1*c(1, j) + v2*c(2, j) + v3*c(3, j) + v4*c(4, j) +
     +          v5*c(5, j) + v6*c(6, j) + v7*c(7, j) + v8*c(8, j)
              DO nd=1,nbdirs
                sumd(nd) = v1d(nd)*c(1, j) + v1*cd(nd, 1, j) + v2d(nd)*c
     +            (2, j) + v2*cd(nd, 2, j) + v3d(nd)*c(3, j) + v3*cd(nd
     +            , 3, j) + v4d(nd)*c(4, j) + v4*cd(nd, 4, j) + v5d(nd)*
     +            c(5, j) + v5*cd(nd, 5, j) + v6d(nd)*c(6, j) + v6*cd(nd
     +            , 6, j) + v7d(nd)*c(7, j) + v7*cd(nd, 7, j) + v8d(nd)*
     +            c(8, j) + v8*cd(nd, 8, j)
                cd(nd, 1, j) = cd(nd, 1, j) - sumd(nd)*t1 - sum*t1d(nd)
                cd(nd, 2, j) = cd(nd, 2, j) - sumd(nd)*t2 - sum*t2d(nd)
                cd(nd, 3, j) = cd(nd, 3, j) - sumd(nd)*t3 - sum*t3d(nd)
                cd(nd, 4, j) = cd(nd, 4, j) - sumd(nd)*t4 - sum*t4d(nd)
                cd(nd, 5, j) = cd(nd, 5, j) - sumd(nd)*t5 - sum*t5d(nd)
                cd(nd, 6, j) = cd(nd, 6, j) - sumd(nd)*t6 - sum*t6d(nd)
                cd(nd, 7, j) = cd(nd, 7, j) - sumd(nd)*t7 - sum*t7d(nd)
                cd(nd, 8, j) = cd(nd, 8, j) - sumd(nd)*t8 - sum*t8d(nd)
              ENDDO
              c(1, j) = c(1, j) - sum*t1
              c(2, j) = c(2, j) - sum*t2
              c(3, j) = c(3, j) - sum*t3
              c(4, j) = c(4, j) - sum*t4
              c(5, j) = c(5, j) - sum*t5
              c(6, j) = c(6, j) - sum*t6
              c(7, j) = c(7, j) - sum*t7
              c(8, j) = c(8, j) - sum*t8
            ENDDO
          ELSE IF (m .EQ. 9) THEN
C
C        Special code for 9 x 9 Householder
C
            v1 = v(1)
            t1 = tau*v1
            v2 = v(2)
            v3 = v(3)
            v4 = v(4)
            v5 = v(5)
            v6 = v(6)
            v7 = v(7)
            v8 = v(8)
            v9 = v(9)
            DO nd=1,nbdirs
              v2d(nd) = vd(nd, 2)
              v9d(nd) = vd(nd, 9)
              v8d(nd) = vd(nd, 8)
              v7d(nd) = vd(nd, 7)
              v6d(nd) = vd(nd, 6)
              v5d(nd) = vd(nd, 5)
              v4d(nd) = vd(nd, 4)
              v3d(nd) = vd(nd, 3)
              v1d(nd) = vd(nd, 1)
              t9d(nd) = taud(nd)*v9 + tau*v9d(nd)
              t8d(nd) = taud(nd)*v8 + tau*v8d(nd)
              t7d(nd) = taud(nd)*v7 + tau*v7d(nd)
              t6d(nd) = taud(nd)*v6 + tau*v6d(nd)
              t5d(nd) = taud(nd)*v5 + tau*v5d(nd)
              t4d(nd) = taud(nd)*v4 + tau*v4d(nd)
              t3d(nd) = taud(nd)*v3 + tau*v3d(nd)
              t2d(nd) = taud(nd)*v2 + tau*v2d(nd)
              t1d(nd) = taud(nd)*v1 + tau*v1d(nd)
            ENDDO
            t2 = tau*v2
            t3 = tau*v3
            t4 = tau*v4
            t5 = tau*v5
            t6 = tau*v6
            t7 = tau*v7
            t8 = tau*v8
            t9 = tau*v9
            DO j=1,n
              sum = v1*c(1, j) + v2*c(2, j) + v3*c(3, j) + v4*c(4, j) +
     +          v5*c(5, j) + v6*c(6, j) + v7*c(7, j) + v8*c(8, j) + v9*c
     +          (9, j)
              DO nd=1,nbdirs
                sumd(nd) = v1d(nd)*c(1, j) + v1*cd(nd, 1, j) + v2d(nd)*c
     +            (2, j) + v2*cd(nd, 2, j) + v3d(nd)*c(3, j) + v3*cd(nd
     +            , 3, j) + v4d(nd)*c(4, j) + v4*cd(nd, 4, j) + v5d(nd)*
     +            c(5, j) + v5*cd(nd, 5, j) + v6d(nd)*c(6, j) + v6*cd(nd
     +            , 6, j) + v7d(nd)*c(7, j) + v7*cd(nd, 7, j) + v8d(nd)*
     +            c(8, j) + v8*cd(nd, 8, j) + v9d(nd)*c(9, j) + v9*cd(nd
     +            , 9, j)
                cd(nd, 1, j) = cd(nd, 1, j) - sumd(nd)*t1 - sum*t1d(nd)
                cd(nd, 2, j) = cd(nd, 2, j) - sumd(nd)*t2 - sum*t2d(nd)
                cd(nd, 3, j) = cd(nd, 3, j) - sumd(nd)*t3 - sum*t3d(nd)
                cd(nd, 4, j) = cd(nd, 4, j) - sumd(nd)*t4 - sum*t4d(nd)
                cd(nd, 5, j) = cd(nd, 5, j) - sumd(nd)*t5 - sum*t5d(nd)
                cd(nd, 6, j) = cd(nd, 6, j) - sumd(nd)*t6 - sum*t6d(nd)
                cd(nd, 7, j) = cd(nd, 7, j) - sumd(nd)*t7 - sum*t7d(nd)
                cd(nd, 8, j) = cd(nd, 8, j) - sumd(nd)*t8 - sum*t8d(nd)
                cd(nd, 9, j) = cd(nd, 9, j) - sumd(nd)*t9 - sum*t9d(nd)
              ENDDO
              c(1, j) = c(1, j) - sum*t1
              c(2, j) = c(2, j) - sum*t2
              c(3, j) = c(3, j) - sum*t3
              c(4, j) = c(4, j) - sum*t4
              c(5, j) = c(5, j) - sum*t5
              c(6, j) = c(6, j) - sum*t6
              c(7, j) = c(7, j) - sum*t7
              c(8, j) = c(8, j) - sum*t8
              c(9, j) = c(9, j) - sum*t9
            ENDDO
          ELSE IF (m .EQ. 10) THEN
C
C        Special code for 10 x 10 Householder
C
            v1 = v(1)
            t1 = tau*v1
            v2 = v(2)
            v3 = v(3)
            v4 = v(4)
            v5 = v(5)
            v6 = v(6)
            v7 = v(7)
            v8 = v(8)
            v9 = v(9)
            v10 = v(10)
            DO nd=1,nbdirs
              v2d(nd) = vd(nd, 2)
              v10d(nd) = vd(nd, 10)
              v9d(nd) = vd(nd, 9)
              v8d(nd) = vd(nd, 8)
              v7d(nd) = vd(nd, 7)
              v6d(nd) = vd(nd, 6)
              v5d(nd) = vd(nd, 5)
              v4d(nd) = vd(nd, 4)
              v3d(nd) = vd(nd, 3)
              v1d(nd) = vd(nd, 1)
              t10d(nd) = taud(nd)*v10 + tau*v10d(nd)
              t9d(nd) = taud(nd)*v9 + tau*v9d(nd)
              t8d(nd) = taud(nd)*v8 + tau*v8d(nd)
              t7d(nd) = taud(nd)*v7 + tau*v7d(nd)
              t6d(nd) = taud(nd)*v6 + tau*v6d(nd)
              t5d(nd) = taud(nd)*v5 + tau*v5d(nd)
              t4d(nd) = taud(nd)*v4 + tau*v4d(nd)
              t3d(nd) = taud(nd)*v3 + tau*v3d(nd)
              t2d(nd) = taud(nd)*v2 + tau*v2d(nd)
              t1d(nd) = taud(nd)*v1 + tau*v1d(nd)
            ENDDO
            t2 = tau*v2
            t3 = tau*v3
            t4 = tau*v4
            t5 = tau*v5
            t6 = tau*v6
            t7 = tau*v7
            t8 = tau*v8
            t9 = tau*v9
            t10 = tau*v10
            DO j=1,n
              sum = v1*c(1, j) + v2*c(2, j) + v3*c(3, j) + v4*c(4, j) +
     +          v5*c(5, j) + v6*c(6, j) + v7*c(7, j) + v8*c(8, j) + v9*c
     +          (9, j) + v10*c(10, j)
              DO nd=1,nbdirs
                sumd(nd) = v1d(nd)*c(1, j) + v1*cd(nd, 1, j) + v2d(nd)*c
     +            (2, j) + v2*cd(nd, 2, j) + v3d(nd)*c(3, j) + v3*cd(nd
     +            , 3, j) + v4d(nd)*c(4, j) + v4*cd(nd, 4, j) + v5d(nd)*
     +            c(5, j) + v5*cd(nd, 5, j) + v6d(nd)*c(6, j) + v6*cd(nd
     +            , 6, j) + v7d(nd)*c(7, j) + v7*cd(nd, 7, j) + v8d(nd)*
     +            c(8, j) + v8*cd(nd, 8, j) + v9d(nd)*c(9, j) + v9*cd(nd
     +            , 9, j) + v10d(nd)*c(10, j) + v10*cd(nd, 10, j)
                cd(nd, 1, j) = cd(nd, 1, j) - sumd(nd)*t1 - sum*t1d(nd)
                cd(nd, 2, j) = cd(nd, 2, j) - sumd(nd)*t2 - sum*t2d(nd)
                cd(nd, 3, j) = cd(nd, 3, j) - sumd(nd)*t3 - sum*t3d(nd)
                cd(nd, 4, j) = cd(nd, 4, j) - sumd(nd)*t4 - sum*t4d(nd)
                cd(nd, 5, j) = cd(nd, 5, j) - sumd(nd)*t5 - sum*t5d(nd)
                cd(nd, 6, j) = cd(nd, 6, j) - sumd(nd)*t6 - sum*t6d(nd)
                cd(nd, 7, j) = cd(nd, 7, j) - sumd(nd)*t7 - sum*t7d(nd)
                cd(nd, 8, j) = cd(nd, 8, j) - sumd(nd)*t8 - sum*t8d(nd)
                cd(nd, 9, j) = cd(nd, 9, j) - sumd(nd)*t9 - sum*t9d(nd)
                cd(nd, 10, j) = cd(nd, 10, j) - sumd(nd)*t10 - sum*t10d(
     +            nd)
              ENDDO
              c(1, j) = c(1, j) - sum*t1
              c(2, j) = c(2, j) - sum*t2
              c(3, j) = c(3, j) - sum*t3
              c(4, j) = c(4, j) - sum*t4
              c(5, j) = c(5, j) - sum*t5
              c(6, j) = c(6, j) - sum*t6
              c(7, j) = c(7, j) - sum*t7
              c(8, j) = c(8, j) - sum*t8
              c(9, j) = c(9, j) - sum*t9
              c(10, j) = c(10, j) - sum*t10
            ENDDO
          ELSE
            DO nd=1,nbdirs
              initvald(nd) = 0.D0
              arg1d(nd) = -taud(nd)
            ENDDO
C
C        Code for general M
C
C        w := C'*v
C
            CALL DGEMV_DV('Transpose', m, n, one, initvald, c, cd, ldc,
     +                    v, vd, 1, zero, work, workd, 1, nbdirs)
C
C        C := C - tau * v * w'
C
            arg1 = -tau
            CALL DGER_DV(m, n, arg1, arg1d, v, vd, 1, work, workd, 1, c
     +                   , cd, ldc, nbdirs)
          END IF
        ELSE IF (n .EQ. 1) THEN
          DO nd=1,nbdirs
            t1d(nd) = -((taud(nd)*v(1)+tau*vd(nd, 1))*v(1)) - tau*v(1)*
     +        vd(nd, 1)
          ENDDO
C
C        Special code for 1 x 1 Householder
C
          t1 = one - tau*v(1)*v(1)
          DO j=1,m
            DO nd=1,nbdirs
              cd(nd, j, 1) = t1d(nd)*c(j, 1) + t1*cd(nd, j, 1)
            ENDDO
            c(j, 1) = t1*c(j, 1)
          ENDDO
        ELSE IF (n .EQ. 2) THEN
C
C        Special code for 2 x 2 Householder
C
          v1 = v(1)
          t1 = tau*v1
          v2 = v(2)
          DO nd=1,nbdirs
            v2d(nd) = vd(nd, 2)
            v1d(nd) = vd(nd, 1)
            t2d(nd) = taud(nd)*v2 + tau*v2d(nd)
            t1d(nd) = taud(nd)*v1 + tau*v1d(nd)
          ENDDO
          t2 = tau*v2
          DO j=1,m
            sum = v1*c(j, 1) + v2*c(j, 2)
            DO nd=1,nbdirs
              sumd(nd) = v1d(nd)*c(j, 1) + v1*cd(nd, j, 1) + v2d(nd)*c(j
     +          , 2) + v2*cd(nd, j, 2)
              cd(nd, j, 1) = cd(nd, j, 1) - sumd(nd)*t1 - sum*t1d(nd)
              cd(nd, j, 2) = cd(nd, j, 2) - sumd(nd)*t2 - sum*t2d(nd)
            ENDDO
            c(j, 1) = c(j, 1) - sum*t1
            c(j, 2) = c(j, 2) - sum*t2
          ENDDO
        ELSE IF (n .EQ. 3) THEN
C
C        Special code for 3 x 3 Householder
C
          v1 = v(1)
          t1 = tau*v1
          v2 = v(2)
          v3 = v(3)
          DO nd=1,nbdirs
            v2d(nd) = vd(nd, 2)
            v3d(nd) = vd(nd, 3)
            v1d(nd) = vd(nd, 1)
            t3d(nd) = taud(nd)*v3 + tau*v3d(nd)
            t2d(nd) = taud(nd)*v2 + tau*v2d(nd)
            t1d(nd) = taud(nd)*v1 + tau*v1d(nd)
          ENDDO
          t2 = tau*v2
          t3 = tau*v3
          DO j=1,m
            sum = v1*c(j, 1) + v2*c(j, 2) + v3*c(j, 3)
            DO nd=1,nbdirs
              sumd(nd) = v1d(nd)*c(j, 1) + v1*cd(nd, j, 1) + v2d(nd)*c(j
     +          , 2) + v2*cd(nd, j, 2) + v3d(nd)*c(j, 3) + v3*cd(nd, j,
     +          3)
              cd(nd, j, 1) = cd(nd, j, 1) - sumd(nd)*t1 - sum*t1d(nd)
              cd(nd, j, 2) = cd(nd, j, 2) - sumd(nd)*t2 - sum*t2d(nd)
              cd(nd, j, 3) = cd(nd, j, 3) - sumd(nd)*t3 - sum*t3d(nd)
            ENDDO
            c(j, 1) = c(j, 1) - sum*t1
            c(j, 2) = c(j, 2) - sum*t2
            c(j, 3) = c(j, 3) - sum*t3
          ENDDO
        ELSE IF (n .EQ. 4) THEN
C
C        Special code for 4 x 4 Householder
C
          v1 = v(1)
          t1 = tau*v1
          v2 = v(2)
          v3 = v(3)
          v4 = v(4)
          DO nd=1,nbdirs
            v2d(nd) = vd(nd, 2)
            v4d(nd) = vd(nd, 4)
            v3d(nd) = vd(nd, 3)
            v1d(nd) = vd(nd, 1)
            t4d(nd) = taud(nd)*v4 + tau*v4d(nd)
            t3d(nd) = taud(nd)*v3 + tau*v3d(nd)
            t2d(nd) = taud(nd)*v2 + tau*v2d(nd)
            t1d(nd) = taud(nd)*v1 + tau*v1d(nd)
          ENDDO
          t2 = tau*v2
          t3 = tau*v3
          t4 = tau*v4
          DO j=1,m
            sum = v1*c(j, 1) + v2*c(j, 2) + v3*c(j, 3) + v4*c(j, 4)
            DO nd=1,nbdirs
              sumd(nd) = v1d(nd)*c(j, 1) + v1*cd(nd, j, 1) + v2d(nd)*c(j
     +          , 2) + v2*cd(nd, j, 2) + v3d(nd)*c(j, 3) + v3*cd(nd, j,
     +          3) + v4d(nd)*c(j, 4) + v4*cd(nd, j, 4)
              cd(nd, j, 1) = cd(nd, j, 1) - sumd(nd)*t1 - sum*t1d(nd)
              cd(nd, j, 2) = cd(nd, j, 2) - sumd(nd)*t2 - sum*t2d(nd)
              cd(nd, j, 3) = cd(nd, j, 3) - sumd(nd)*t3 - sum*t3d(nd)
              cd(nd, j, 4) = cd(nd, j, 4) - sumd(nd)*t4 - sum*t4d(nd)
            ENDDO
            c(j, 1) = c(j, 1) - sum*t1
            c(j, 2) = c(j, 2) - sum*t2
            c(j, 3) = c(j, 3) - sum*t3
            c(j, 4) = c(j, 4) - sum*t4
          ENDDO
        ELSE IF (n .EQ. 5) THEN
C
C        Special code for 5 x 5 Householder
C
          v1 = v(1)
          t1 = tau*v1
          v2 = v(2)
          v3 = v(3)
          v4 = v(4)
          v5 = v(5)
          DO nd=1,nbdirs
            v2d(nd) = vd(nd, 2)
            v5d(nd) = vd(nd, 5)
            v4d(nd) = vd(nd, 4)
            v3d(nd) = vd(nd, 3)
            v1d(nd) = vd(nd, 1)
            t5d(nd) = taud(nd)*v5 + tau*v5d(nd)
            t4d(nd) = taud(nd)*v4 + tau*v4d(nd)
            t3d(nd) = taud(nd)*v3 + tau*v3d(nd)
            t2d(nd) = taud(nd)*v2 + tau*v2d(nd)
            t1d(nd) = taud(nd)*v1 + tau*v1d(nd)
          ENDDO
          t2 = tau*v2
          t3 = tau*v3
          t4 = tau*v4
          t5 = tau*v5
          DO j=1,m
            sum = v1*c(j, 1) + v2*c(j, 2) + v3*c(j, 3) + v4*c(j, 4) + v5
     +        *c(j, 5)
            DO nd=1,nbdirs
              sumd(nd) = v1d(nd)*c(j, 1) + v1*cd(nd, j, 1) + v2d(nd)*c(j
     +          , 2) + v2*cd(nd, j, 2) + v3d(nd)*c(j, 3) + v3*cd(nd, j,
     +          3) + v4d(nd)*c(j, 4) + v4*cd(nd, j, 4) + v5d(nd)*c(j, 5)
     +          + v5*cd(nd, j, 5)
              cd(nd, j, 1) = cd(nd, j, 1) - sumd(nd)*t1 - sum*t1d(nd)
              cd(nd, j, 2) = cd(nd, j, 2) - sumd(nd)*t2 - sum*t2d(nd)
              cd(nd, j, 3) = cd(nd, j, 3) - sumd(nd)*t3 - sum*t3d(nd)
              cd(nd, j, 4) = cd(nd, j, 4) - sumd(nd)*t4 - sum*t4d(nd)
              cd(nd, j, 5) = cd(nd, j, 5) - sumd(nd)*t5 - sum*t5d(nd)
            ENDDO
            c(j, 1) = c(j, 1) - sum*t1
            c(j, 2) = c(j, 2) - sum*t2
            c(j, 3) = c(j, 3) - sum*t3
            c(j, 4) = c(j, 4) - sum*t4
            c(j, 5) = c(j, 5) - sum*t5
          ENDDO
        ELSE IF (n .EQ. 6) THEN
C
C        Special code for 6 x 6 Householder
C
          v1 = v(1)
          t1 = tau*v1
          v2 = v(2)
          v3 = v(3)
          v4 = v(4)
          v5 = v(5)
          v6 = v(6)
          DO nd=1,nbdirs
            v2d(nd) = vd(nd, 2)
            v6d(nd) = vd(nd, 6)
            v5d(nd) = vd(nd, 5)
            v4d(nd) = vd(nd, 4)
            v3d(nd) = vd(nd, 3)
            v1d(nd) = vd(nd, 1)
            t6d(nd) = taud(nd)*v6 + tau*v6d(nd)
            t5d(nd) = taud(nd)*v5 + tau*v5d(nd)
            t4d(nd) = taud(nd)*v4 + tau*v4d(nd)
            t3d(nd) = taud(nd)*v3 + tau*v3d(nd)
            t2d(nd) = taud(nd)*v2 + tau*v2d(nd)
            t1d(nd) = taud(nd)*v1 + tau*v1d(nd)
          ENDDO
          t2 = tau*v2
          t3 = tau*v3
          t4 = tau*v4
          t5 = tau*v5
          t6 = tau*v6
          DO j=1,m
            sum = v1*c(j, 1) + v2*c(j, 2) + v3*c(j, 3) + v4*c(j, 4) + v5
     +        *c(j, 5) + v6*c(j, 6)
            DO nd=1,nbdirs
              sumd(nd) = v1d(nd)*c(j, 1) + v1*cd(nd, j, 1) + v2d(nd)*c(j
     +          , 2) + v2*cd(nd, j, 2) + v3d(nd)*c(j, 3) + v3*cd(nd, j,
     +          3) + v4d(nd)*c(j, 4) + v4*cd(nd, j, 4) + v5d(nd)*c(j, 5)
     +          + v5*cd(nd, j, 5) + v6d(nd)*c(j, 6) + v6*cd(nd, j, 6)
              cd(nd, j, 1) = cd(nd, j, 1) - sumd(nd)*t1 - sum*t1d(nd)
              cd(nd, j, 2) = cd(nd, j, 2) - sumd(nd)*t2 - sum*t2d(nd)
              cd(nd, j, 3) = cd(nd, j, 3) - sumd(nd)*t3 - sum*t3d(nd)
              cd(nd, j, 4) = cd(nd, j, 4) - sumd(nd)*t4 - sum*t4d(nd)
              cd(nd, j, 5) = cd(nd, j, 5) - sumd(nd)*t5 - sum*t5d(nd)
              cd(nd, j, 6) = cd(nd, j, 6) - sumd(nd)*t6 - sum*t6d(nd)
            ENDDO
            c(j, 1) = c(j, 1) - sum*t1
            c(j, 2) = c(j, 2) - sum*t2
            c(j, 3) = c(j, 3) - sum*t3
            c(j, 4) = c(j, 4) - sum*t4
            c(j, 5) = c(j, 5) - sum*t5
            c(j, 6) = c(j, 6) - sum*t6
          ENDDO
        ELSE IF (n .EQ. 7) THEN
C
C        Special code for 7 x 7 Householder
C
          v1 = v(1)
          t1 = tau*v1
          v2 = v(2)
          v3 = v(3)
          v4 = v(4)
          v5 = v(5)
          v6 = v(6)
          v7 = v(7)
          DO nd=1,nbdirs
            v2d(nd) = vd(nd, 2)
            v7d(nd) = vd(nd, 7)
            v6d(nd) = vd(nd, 6)
            v5d(nd) = vd(nd, 5)
            v4d(nd) = vd(nd, 4)
            v3d(nd) = vd(nd, 3)
            v1d(nd) = vd(nd, 1)
            t7d(nd) = taud(nd)*v7 + tau*v7d(nd)
            t6d(nd) = taud(nd)*v6 + tau*v6d(nd)
            t5d(nd) = taud(nd)*v5 + tau*v5d(nd)
            t4d(nd) = taud(nd)*v4 + tau*v4d(nd)
            t3d(nd) = taud(nd)*v3 + tau*v3d(nd)
            t2d(nd) = taud(nd)*v2 + tau*v2d(nd)
            t1d(nd) = taud(nd)*v1 + tau*v1d(nd)
          ENDDO
          t2 = tau*v2
          t3 = tau*v3
          t4 = tau*v4
          t5 = tau*v5
          t6 = tau*v6
          t7 = tau*v7
          DO j=1,m
            sum = v1*c(j, 1) + v2*c(j, 2) + v3*c(j, 3) + v4*c(j, 4) + v5
     +        *c(j, 5) + v6*c(j, 6) + v7*c(j, 7)
            DO nd=1,nbdirs
              sumd(nd) = v1d(nd)*c(j, 1) + v1*cd(nd, j, 1) + v2d(nd)*c(j
     +          , 2) + v2*cd(nd, j, 2) + v3d(nd)*c(j, 3) + v3*cd(nd, j,
     +          3) + v4d(nd)*c(j, 4) + v4*cd(nd, j, 4) + v5d(nd)*c(j, 5)
     +          + v5*cd(nd, j, 5) + v6d(nd)*c(j, 6) + v6*cd(nd, j, 6) +
     +          v7d(nd)*c(j, 7) + v7*cd(nd, j, 7)
              cd(nd, j, 1) = cd(nd, j, 1) - sumd(nd)*t1 - sum*t1d(nd)
              cd(nd, j, 2) = cd(nd, j, 2) - sumd(nd)*t2 - sum*t2d(nd)
              cd(nd, j, 3) = cd(nd, j, 3) - sumd(nd)*t3 - sum*t3d(nd)
              cd(nd, j, 4) = cd(nd, j, 4) - sumd(nd)*t4 - sum*t4d(nd)
              cd(nd, j, 5) = cd(nd, j, 5) - sumd(nd)*t5 - sum*t5d(nd)
              cd(nd, j, 6) = cd(nd, j, 6) - sumd(nd)*t6 - sum*t6d(nd)
              cd(nd, j, 7) = cd(nd, j, 7) - sumd(nd)*t7 - sum*t7d(nd)
            ENDDO
            c(j, 1) = c(j, 1) - sum*t1
            c(j, 2) = c(j, 2) - sum*t2
            c(j, 3) = c(j, 3) - sum*t3
            c(j, 4) = c(j, 4) - sum*t4
            c(j, 5) = c(j, 5) - sum*t5
            c(j, 6) = c(j, 6) - sum*t6
            c(j, 7) = c(j, 7) - sum*t7
          ENDDO
        ELSE IF (n .EQ. 8) THEN
C
C        Special code for 8 x 8 Householder
C
          v1 = v(1)
          t1 = tau*v1
          v2 = v(2)
          v3 = v(3)
          v4 = v(4)
          v5 = v(5)
          v6 = v(6)
          v7 = v(7)
          v8 = v(8)
          DO nd=1,nbdirs
            v2d(nd) = vd(nd, 2)
            v8d(nd) = vd(nd, 8)
            v7d(nd) = vd(nd, 7)
            v6d(nd) = vd(nd, 6)
            v5d(nd) = vd(nd, 5)
            v4d(nd) = vd(nd, 4)
            v3d(nd) = vd(nd, 3)
            v1d(nd) = vd(nd, 1)
            t8d(nd) = taud(nd)*v8 + tau*v8d(nd)
            t7d(nd) = taud(nd)*v7 + tau*v7d(nd)
            t6d(nd) = taud(nd)*v6 + tau*v6d(nd)
            t5d(nd) = taud(nd)*v5 + tau*v5d(nd)
            t4d(nd) = taud(nd)*v4 + tau*v4d(nd)
            t3d(nd) = taud(nd)*v3 + tau*v3d(nd)
            t2d(nd) = taud(nd)*v2 + tau*v2d(nd)
            t1d(nd) = taud(nd)*v1 + tau*v1d(nd)
          ENDDO
          t2 = tau*v2
          t3 = tau*v3
          t4 = tau*v4
          t5 = tau*v5
          t6 = tau*v6
          t7 = tau*v7
          t8 = tau*v8
          DO j=1,m
            sum = v1*c(j, 1) + v2*c(j, 2) + v3*c(j, 3) + v4*c(j, 4) + v5
     +        *c(j, 5) + v6*c(j, 6) + v7*c(j, 7) + v8*c(j, 8)
            DO nd=1,nbdirs
              sumd(nd) = v1d(nd)*c(j, 1) + v1*cd(nd, j, 1) + v2d(nd)*c(j
     +          , 2) + v2*cd(nd, j, 2) + v3d(nd)*c(j, 3) + v3*cd(nd, j,
     +          3) + v4d(nd)*c(j, 4) + v4*cd(nd, j, 4) + v5d(nd)*c(j, 5)
     +          + v5*cd(nd, j, 5) + v6d(nd)*c(j, 6) + v6*cd(nd, j, 6) +
     +          v7d(nd)*c(j, 7) + v7*cd(nd, j, 7) + v8d(nd)*c(j, 8) + v8
     +          *cd(nd, j, 8)
              cd(nd, j, 1) = cd(nd, j, 1) - sumd(nd)*t1 - sum*t1d(nd)
              cd(nd, j, 2) = cd(nd, j, 2) - sumd(nd)*t2 - sum*t2d(nd)
              cd(nd, j, 3) = cd(nd, j, 3) - sumd(nd)*t3 - sum*t3d(nd)
              cd(nd, j, 4) = cd(nd, j, 4) - sumd(nd)*t4 - sum*t4d(nd)
              cd(nd, j, 5) = cd(nd, j, 5) - sumd(nd)*t5 - sum*t5d(nd)
              cd(nd, j, 6) = cd(nd, j, 6) - sumd(nd)*t6 - sum*t6d(nd)
              cd(nd, j, 7) = cd(nd, j, 7) - sumd(nd)*t7 - sum*t7d(nd)
              cd(nd, j, 8) = cd(nd, j, 8) - sumd(nd)*t8 - sum*t8d(nd)
            ENDDO
            c(j, 1) = c(j, 1) - sum*t1
            c(j, 2) = c(j, 2) - sum*t2
            c(j, 3) = c(j, 3) - sum*t3
            c(j, 4) = c(j, 4) - sum*t4
            c(j, 5) = c(j, 5) - sum*t5
            c(j, 6) = c(j, 6) - sum*t6
            c(j, 7) = c(j, 7) - sum*t7
            c(j, 8) = c(j, 8) - sum*t8
          ENDDO
        ELSE IF (n .EQ. 9) THEN
C
C        Special code for 9 x 9 Householder
C
          v1 = v(1)
          t1 = tau*v1
          v2 = v(2)
          v3 = v(3)
          v4 = v(4)
          v5 = v(5)
          v6 = v(6)
          v7 = v(7)
          v8 = v(8)
          v9 = v(9)
          DO nd=1,nbdirs
            v2d(nd) = vd(nd, 2)
            v9d(nd) = vd(nd, 9)
            v8d(nd) = vd(nd, 8)
            v7d(nd) = vd(nd, 7)
            v6d(nd) = vd(nd, 6)
            v5d(nd) = vd(nd, 5)
            v4d(nd) = vd(nd, 4)
            v3d(nd) = vd(nd, 3)
            v1d(nd) = vd(nd, 1)
            t9d(nd) = taud(nd)*v9 + tau*v9d(nd)
            t8d(nd) = taud(nd)*v8 + tau*v8d(nd)
            t7d(nd) = taud(nd)*v7 + tau*v7d(nd)
            t6d(nd) = taud(nd)*v6 + tau*v6d(nd)
            t5d(nd) = taud(nd)*v5 + tau*v5d(nd)
            t4d(nd) = taud(nd)*v4 + tau*v4d(nd)
            t3d(nd) = taud(nd)*v3 + tau*v3d(nd)
            t2d(nd) = taud(nd)*v2 + tau*v2d(nd)
            t1d(nd) = taud(nd)*v1 + tau*v1d(nd)
          ENDDO
          t2 = tau*v2
          t3 = tau*v3
          t4 = tau*v4
          t5 = tau*v5
          t6 = tau*v6
          t7 = tau*v7
          t8 = tau*v8
          t9 = tau*v9
          DO j=1,m
            sum = v1*c(j, 1) + v2*c(j, 2) + v3*c(j, 3) + v4*c(j, 4) + v5
     +        *c(j, 5) + v6*c(j, 6) + v7*c(j, 7) + v8*c(j, 8) + v9*c(j,
     +        9)
            DO nd=1,nbdirs
              sumd(nd) = v1d(nd)*c(j, 1) + v1*cd(nd, j, 1) + v2d(nd)*c(j
     +          , 2) + v2*cd(nd, j, 2) + v3d(nd)*c(j, 3) + v3*cd(nd, j,
     +          3) + v4d(nd)*c(j, 4) + v4*cd(nd, j, 4) + v5d(nd)*c(j, 5)
     +          + v5*cd(nd, j, 5) + v6d(nd)*c(j, 6) + v6*cd(nd, j, 6) +
     +          v7d(nd)*c(j, 7) + v7*cd(nd, j, 7) + v8d(nd)*c(j, 8) + v8
     +          *cd(nd, j, 8) + v9d(nd)*c(j, 9) + v9*cd(nd, j, 9)
              cd(nd, j, 1) = cd(nd, j, 1) - sumd(nd)*t1 - sum*t1d(nd)
              cd(nd, j, 2) = cd(nd, j, 2) - sumd(nd)*t2 - sum*t2d(nd)
              cd(nd, j, 3) = cd(nd, j, 3) - sumd(nd)*t3 - sum*t3d(nd)
              cd(nd, j, 4) = cd(nd, j, 4) - sumd(nd)*t4 - sum*t4d(nd)
              cd(nd, j, 5) = cd(nd, j, 5) - sumd(nd)*t5 - sum*t5d(nd)
              cd(nd, j, 6) = cd(nd, j, 6) - sumd(nd)*t6 - sum*t6d(nd)
              cd(nd, j, 7) = cd(nd, j, 7) - sumd(nd)*t7 - sum*t7d(nd)
              cd(nd, j, 8) = cd(nd, j, 8) - sumd(nd)*t8 - sum*t8d(nd)
              cd(nd, j, 9) = cd(nd, j, 9) - sumd(nd)*t9 - sum*t9d(nd)
            ENDDO
            c(j, 1) = c(j, 1) - sum*t1
            c(j, 2) = c(j, 2) - sum*t2
            c(j, 3) = c(j, 3) - sum*t3
            c(j, 4) = c(j, 4) - sum*t4
            c(j, 5) = c(j, 5) - sum*t5
            c(j, 6) = c(j, 6) - sum*t6
            c(j, 7) = c(j, 7) - sum*t7
            c(j, 8) = c(j, 8) - sum*t8
            c(j, 9) = c(j, 9) - sum*t9
          ENDDO
        ELSE IF (n .EQ. 10) THEN
C
C        Special code for 10 x 10 Householder
C
          v1 = v(1)
          t1 = tau*v1
          v2 = v(2)
          v3 = v(3)
          v4 = v(4)
          v5 = v(5)
          v6 = v(6)
          v7 = v(7)
          v8 = v(8)
          v9 = v(9)
          v10 = v(10)
          DO nd=1,nbdirs
            v2d(nd) = vd(nd, 2)
            v10d(nd) = vd(nd, 10)
            v9d(nd) = vd(nd, 9)
            v8d(nd) = vd(nd, 8)
            v7d(nd) = vd(nd, 7)
            v6d(nd) = vd(nd, 6)
            v5d(nd) = vd(nd, 5)
            v4d(nd) = vd(nd, 4)
            v3d(nd) = vd(nd, 3)
            v1d(nd) = vd(nd, 1)
            t10d(nd) = taud(nd)*v10 + tau*v10d(nd)
            t9d(nd) = taud(nd)*v9 + tau*v9d(nd)
            t8d(nd) = taud(nd)*v8 + tau*v8d(nd)
            t7d(nd) = taud(nd)*v7 + tau*v7d(nd)
            t6d(nd) = taud(nd)*v6 + tau*v6d(nd)
            t5d(nd) = taud(nd)*v5 + tau*v5d(nd)
            t4d(nd) = taud(nd)*v4 + tau*v4d(nd)
            t3d(nd) = taud(nd)*v3 + tau*v3d(nd)
            t2d(nd) = taud(nd)*v2 + tau*v2d(nd)
            t1d(nd) = taud(nd)*v1 + tau*v1d(nd)
          ENDDO
          t2 = tau*v2
          t3 = tau*v3
          t4 = tau*v4
          t5 = tau*v5
          t6 = tau*v6
          t7 = tau*v7
          t8 = tau*v8
          t9 = tau*v9
          t10 = tau*v10
          DO j=1,m
            sum = v1*c(j, 1) + v2*c(j, 2) + v3*c(j, 3) + v4*c(j, 4) + v5
     +        *c(j, 5) + v6*c(j, 6) + v7*c(j, 7) + v8*c(j, 8) + v9*c(j,
     +        9) + v10*c(j, 10)
            DO nd=1,nbdirs
              sumd(nd) = v1d(nd)*c(j, 1) + v1*cd(nd, j, 1) + v2d(nd)*c(j
     +          , 2) + v2*cd(nd, j, 2) + v3d(nd)*c(j, 3) + v3*cd(nd, j,
     +          3) + v4d(nd)*c(j, 4) + v4*cd(nd, j, 4) + v5d(nd)*c(j, 5)
     +          + v5*cd(nd, j, 5) + v6d(nd)*c(j, 6) + v6*cd(nd, j, 6) +
     +          v7d(nd)*c(j, 7) + v7*cd(nd, j, 7) + v8d(nd)*c(j, 8) + v8
     +          *cd(nd, j, 8) + v9d(nd)*c(j, 9) + v9*cd(nd, j, 9) + v10d
     +          (nd)*c(j, 10) + v10*cd(nd, j, 10)
              cd(nd, j, 1) = cd(nd, j, 1) - sumd(nd)*t1 - sum*t1d(nd)
              cd(nd, j, 2) = cd(nd, j, 2) - sumd(nd)*t2 - sum*t2d(nd)
              cd(nd, j, 3) = cd(nd, j, 3) - sumd(nd)*t3 - sum*t3d(nd)
              cd(nd, j, 4) = cd(nd, j, 4) - sumd(nd)*t4 - sum*t4d(nd)
              cd(nd, j, 5) = cd(nd, j, 5) - sumd(nd)*t5 - sum*t5d(nd)
              cd(nd, j, 6) = cd(nd, j, 6) - sumd(nd)*t6 - sum*t6d(nd)
              cd(nd, j, 7) = cd(nd, j, 7) - sumd(nd)*t7 - sum*t7d(nd)
              cd(nd, j, 8) = cd(nd, j, 8) - sumd(nd)*t8 - sum*t8d(nd)
              cd(nd, j, 9) = cd(nd, j, 9) - sumd(nd)*t9 - sum*t9d(nd)
              cd(nd, j, 10) = cd(nd, j, 10) - sumd(nd)*t10 - sum*t10d(nd
     +          )
            ENDDO
            c(j, 1) = c(j, 1) - sum*t1
            c(j, 2) = c(j, 2) - sum*t2
            c(j, 3) = c(j, 3) - sum*t3
            c(j, 4) = c(j, 4) - sum*t4
            c(j, 5) = c(j, 5) - sum*t5
            c(j, 6) = c(j, 6) - sum*t6
            c(j, 7) = c(j, 7) - sum*t7
            c(j, 8) = c(j, 8) - sum*t8
            c(j, 9) = c(j, 9) - sum*t9
            c(j, 10) = c(j, 10) - sum*t10
          ENDDO
        ELSE
          DO nd=1,nbdirs
            initvald0(nd) = 0.D0
            arg1d(nd) = -taud(nd)
          ENDDO
C
C
C        Code for general N
C
C        w := C * v
C
          CALL DGEMV_DV('No transpose', m, n, one, initvald0, c, cd, ldc
     +                  , v, vd, 1, zero, work, workd, 1, nbdirs)
C
C        C := C - tau * w * v'
C
          arg1 = -tau
          CALL DGER_DV(m, n, arg1, arg1d, work, workd, 1, v, vd, 1, c,
     +                 cd, ldc, nbdirs)
C
C
        END IF
        RETURN
C
C     End of DLARFX
C
      END IF
      END
